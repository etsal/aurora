#!/bin/sh

slsnewfs()
{
    # Pipe to /dev/null if there is no log
    TESTLOG=${TESTLOG:-"/dev/null"}
    newfs_sls $DISKPATH >> $TESTLOG 2>> $TESTLOG
}

slsmount()
{
    mkdir -p $MNT
    mount -t slsfs $DISKPATH $MNT
    ret=$?
    if [ $ret  -ne 0 ]; then
	    return $ret
    fi

    mkdir -p $MNT/dev
    mkdir -p $MNT/proc
    mount -t procfs proc $MNT/proc
    mount -t devfs devfs $MNT/dev
    mount -t fdescfs fdesc $MNT/dev/fd
}

slsunmount()
{
    umount fdesc $MNT/dev/fd >/dev/null 2>/dev/null
    umount $MNT/dev >/dev/null 2>/dev/null
    umount proc $MNT/proc >/dev/null 2>/dev/null
    umount $MNT
}

aursetup()
{
    kldload slos
    slsnewfs
    slsmount
#    kldload sls
}

aurteardown()
{
#    kldunload sls
    slsunmount
    kldunload slos
}

slscheckpoint()
{
    slsctl attach -p $1 -m
    slsctl checkpoint -m -r
}

slsrestore()
{
    slsctl restore -m &
}

slsosdcheckpoint()
{
    slsctl attach -p $1
    slsctl checkpoint -r
}

slslazycheckpoint()
{
    slsctl partadd slos -o $2 -l -i
    slsctl attach -p $1 -o $2
    slsctl checkpoint -o $2 -r
}

slsosdrestore()
{
    slsctl restore &
}

slslazyrestore()
{
    slsctl restore -o $1 &
}

killandwait()
{
    kill $1
    wait $1
}

installroot()
{
    SLSROOT="/usr/freebsd-dist/base.txz"

    # Unpack the root into the mount if it exists
    tar -C "$MNT" -xf "$SLSROOT" --exclude "proc/*" --exclude "dev/*"
}
